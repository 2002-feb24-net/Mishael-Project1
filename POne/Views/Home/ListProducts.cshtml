@model IEnumerable<POne.Models.ProductModel>

@{
    ViewData["Title"] = "ListProductsEdit";
}

<h1>Products from @ViewData["LocationName"]</h1>

<p>
    @Html.ActionLink("Create New", "AddProduct", new { ID = Model.First().LocId })
</p>
<table class="table">
    <thead>
        <tr>
            @*<th>
                    @Html.DisplayNameFor(model => model.PrdId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LocId)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) if (item.Name != null)
            {
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.PrdId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LocId)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stock)
                    </td>
                    <td>
                        @Html.ActionLink("Restock", "Restock", new { ID = item.PrdId }) |
                        @Html.ActionLink("AddItem", "AddToCart", new { ID = item.PrdId })
                        @if (item.removable)
                        {@(new string(" | "))@Html.ActionLink("Remove", "RemoveItem", new { ID = item.PrdId })}
                    </td>
                </tr>
            }
                    </tbody>
                </table>
               